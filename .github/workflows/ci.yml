name: build

on: [push, pull_request]

jobs:
  build:
    name: Build and test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Configure git
        run: |
          git config --global core.symlinks true
          git config --global core.autocrlf input

      - name: Clone repository
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 1
          submodules: true

      - name: Install nodejs
        uses: actions/setup-node@v3.4.0
        with:
          node-version: '16.x'

      - name: Log versions
        run: |
          node -v
          yarn -v

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3.0.9
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup
        run: yarn install

      - name: Build
        run: |
          yarn build:dll
          yarn build

      # - name: Deploy
      #   uses: easingthemes/ssh-deploy@v2.1.1
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
      #     ARGS: '-rltgoDzvO'
      #     SOURCE: 'dist/'
      #     REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      #     REMOTE_USER: ${{ secrets.REMOTE_USER }}
      #     TARGET: ${{ secrets.REMOTE_TARGET }}
      #   if: matrix.os == 'ubuntu-latest'
