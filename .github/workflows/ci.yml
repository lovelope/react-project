name: build

on: [push, pull_request]

jobs:
  build:
    name: Build and test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-16.04]
    steps:
      - name: Configure git
        run: |
          git config --global core.symlinks true
          git config --global core.autocrlf input

      - name: Clone repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
          submodules: true

      - name: Install nodejs
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Log versions
        run: |
          node -v
          yarn -v

      - name: Cache ~/.pnpm-store
        uses: actions/cache@main
        env:
          cache-name: cache-pnpm-store
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-build-
            ${{ runner.os }}-

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Setup
        run: pnpm i

      - name: Build
        run: |
          pnpm run build:dll
          pnpm run build

      - name: Deploy
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: '-rltgoDzvO'
          SOURCE: 'dist/'
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
        if: matrix.os == 'ubuntu-16.04'
